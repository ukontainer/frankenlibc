language: c
cache: ccache
git:
  submodules: false


stages:
  - test
  - downstream

jobs:
  include:
    - stage: test
      os: linux
      dist: xenial
      sudo: required
      compiler: clang
      env:
        - ARCH=amd64
    - stage: test
      os: linux
      dist: xenial
      sudo: required
      compiler: gcc
      env:
        - ARCH=amd64
    - stage: test
      os: osx
      osx_image: xcode10.1
      compiler: clang
      env: DEPLOY=skip
        - ARCH=amd64
      before_install:
        - mkdir -p ~/.local/bin
        - mkdir ~/junit
        - export PATH=/usr/local/opt/ccache/libexec:$HOME/.local/bin:$PATH
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install gnu-sed ccache e2fsprogs
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install binutils
        - pip install --user yamlish junit_xml
        - ln -sf /usr/local/bin/gsed ~/.local/bin/sed
        - ln -sf /usr/local/bin/gdate ~/.local/bin/date
        - ln -sf /usr/local/opt/e2fsprogs/sbin/mkfs.ext4 ~/.local/bin/
        - ln -sf /usr/local/opt/binutils/bin/objcopy ~/.local/bin/objcopy
    - stage: test
      os: osx
      osx_image: xcode10.2
      compiler: clang
      env:
        - ARCH=amd64
      before_install:
        - mkdir -p ~/.local/bin
        - mkdir ~/junit
        - export PATH=/usr/local/opt/ccache/libexec:$HOME/.local/bin:$PATH
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install gnu-sed ccache e2fsprogs
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install binutils
        - pip install --user yamlish junit_xml
        - ln -sf /usr/local/bin/gsed ~/.local/bin/sed
        - ln -sf /usr/local/bin/gdate ~/.local/bin/date
        - ln -sf /usr/local/opt/e2fsprogs/sbin/mkfs.ext4 ~/.local/bin/
        - ln -sf /usr/local/opt/binutils/bin/objcopy ~/.local/bin/objcopy
    - stage: test
      os: osx
      osx_image: xcode11.3
      compiler: clang
      env: DEPLOY=skip
        - ARCH=amd64
      before_install:
        - mkdir -p ~/.local/bin
        - mkdir ~/junit
        - export PATH=/usr/local/opt/ccache/libexec:$HOME/.local/bin:$PATH
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install gnu-sed ccache e2fsprogs
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install binutils
        - pip install --user yamlish junit_xml
        - ln -sf /usr/local/bin/gsed ~/.local/bin/sed
        - ln -sf /usr/local/bin/gdate ~/.local/bin/date
        - ln -sf /usr/local/opt/e2fsprogs/sbin/mkfs.ext4 ~/.local/bin/
        - ln -sf /usr/local/opt/binutils/bin/objcopy ~/.local/bin/objcopy
    - stage: test
      os: linux
      dist: xenial
      sudo: required
      compiler: arm-linux-gnueabihf-gcc
      env:
        - CC=arm-linux-gnueabihf-gcc
        - PATH=/usr/lib/ccache/:$HOME/rpi-tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/:$PATH
        - ARCH=arm
      before_install:
        - git clone https://github.com/raspberrypi/tools $HOME/rpi-tools
        - sudo ln -s `which ccache` /usr/lib/ccache/arm-linux-gnueabihf-gcc
    - stage: downstream
      before_script:
      script: bash -ex ./.travis-trigger.sh ukontainer/rumprun-packages lkl-musl
      os: linux

before_script:
  - travis_wait 30 git submodule update --init llvm
  - travis_wait 30 git submodule update --init --depth=50
script:
  - sudo mkdir -p /opt/rump && sudo chown -R $USER /opt/
  - for file in `find patches/ -maxdepth 1 -type f` ; do patch -p1 < $file ; done
  - for file in `find patches/$TRAVIS_OS_NAME/ -maxdepth 1 -type f` ; do patch -p1 < $file ; done
  - ./build.sh -d /opt/rump -q -k linux notest
  - if [ $CC != "arm-linux-gnueabihf-gcc" ] ; then RUMPDIR=/opt/rump RUMPOBJ=`pwd`/rumpobj make -C tests run ; fi
  - bash -ex ./.travis-deploy.sh $DEPLOY
